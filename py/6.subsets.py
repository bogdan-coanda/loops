from diagram import *
from uicanvas import *
from itertools import chain
							
	
if __name__ == "__main__":
	
	diagram = Diagram(6)
	diagram.loadExtenders()
	
	'''
	maxcommon_pair = (0, 0)
	maxcommon_count = 0
	seen = set()
	thirds = []
	for i in range(len(diagram.extenders)):
		for j in range(i+1, len(diagram.extenders)):
			common = len(set(diagram.extenders[i]).intersection(diagram.extenders[j]))
			if common >= maxcommon_count:
				maxcommon_count = common
				maxcommon_pair = (i, j)				
				if (maxcommon_count >= 24):
					print("@ " + str(i) + " » " + str(maxcommon_count) + " | " + str(maxcommon_pair))
					if i in seen or j in seen:
						print("» » » third:"+str(len(thirds)))
						thirds.append((i, j))
					seen.add(i)
					seen.add(j)
						
	print(str(maxcommon_count) + " | " + str(maxcommon_pair))
	'''
	thirds = [(830, 30753), (830, 42055), (1526, 1527), (2571, 3931), (2572, 3932), (2577, 3679), (2578, 3680), (2579, 3681), (2580, 3682), (2918, 2919), (2922, 2923), (2924, 2925), (2933, 2934), (2935, 2936), (2938, 2939), (3762, 3763), (3765, 3766), (3767, 3776), (3768, 3774), (4375, 4378), (5978, 5979), (5983, 5984), (5985, 5986), (5997, 32543), (5997, 41393), (6076, 6079), (6077, 6078), (6081, 6083), (6399, 8581), (6400, 8100), (6401, 8101), (6402, 8090), (6403, 8091), (6404, 8574), (7587, 7588), (7797, 8825), (8166, 8203), (8167, 8204), (8175, 8176), (8177, 8178), (9244, 12335), (9275, 33789), (9954, 34383), (11021, 11093), (11022, 11094), (11034, 11035), (11037, 11038), (11341, 35116), (11562, 16670), (11582, 34997), (12342, 12344), (12357, 35613), (14248, 14249), (14256, 14257), (14261, 14291), (14262, 14287), (15104, 36344), (15104, 39263), (15630, 15631), (15786, 34300), (17713, 37472), (17713, 38254), (18779, 18782), (19022, 19023), (19780, 37472), (19780, 38254), (20772, 21398), (20773, 21399), (21001, 21002), (21006, 21007), (22381, 22382), (22384, 22387), (22385, 22386), (22397, 36344), (22397, 39263), (22453, 22457), (22454, 22460), (22455, 22458), (22591, 23848), (22592, 23581), (22593, 23582), (22594, 23572), (22595, 23573), (22596, 23842), (23302, 23303), (23388, 23978), (23625, 23654), (23626, 23655), (23633, 23634), (23635, 23636), (24252, 39829), (24739, 40252), (25500, 25563), (25501, 25564), (25512, 25513), (25515, 25516), (25740, 40599), (25888, 28813), (25907, 40513), (26457, 40981), (26554, 40909), (27644, 32543), (27644, 41393), (28044, 28045), (28163, 40182), (28918, 33919), (29479, 30753), (29479, 42055), (30119, 30122), (30237, 30238), (30753, 42055), (31474, 31909), (31475, 31910), (31608, 31609), (31611, 31612), (32527, 32528), (32530, 32533), (32531, 32532), (32543, 41393), (32581, 32584), (32582, 32586), (32583, 32585), (32679, 33625), (32680, 33437), (32681, 33438), (32682, 33428), (32683, 33429), (32684, 33619), (33471, 33490), (33472, 33491), (33474, 33478), (33475, 33477), (34851, 34899), (34852, 34900), (34858, 34863), (34859, 34861), (35525, 35528), (36344, 39263), (37117, 39910), (37472, 38254), (38671, 38881), (38672, 38882), (38728, 38734), (38729, 38733), (39255, 39256), (39280, 39281), (39343, 39709), (39344, 39702)]
	
	uniq = set(chain(*thirds))
	
	seen = []
	
	for tid in uniq:
		if tid not in seen:
			
	
	
