from diagram import *
from uicanvas import *
from chain import *

if __name__ == "__main__":

	diagram = Diagram(7)

	# nsk: 666 3 66 4 666 4 66 4 666 4 66 3 666
	
	a
	
	
	a = ''.join([str(int(x)-1) for x in a])	

	# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- #
		
	# ex = '0123456 10 234561 20 345612 30 456123 40 561234 50 612345 60 123456'
	
	ex = []
	
	while True:
		found = False
		
		for i in range(0, len(a) - 6 - 49):
			x = a[i:i+7]
			b = ''.join([x[1], x[0], x[2], x[3], x[4], x[5], x[6], x[1], x[2], x[0], x[3], x[4], x[5], x[6], x[1], x[2], x[3], x[0], x[4], x[5], x[6], x[1], x[2], x[3], x[4], x[0], x[5], x[6], x[1], x[2], x[3], x[4], x[5], x[0], x[6], x[1], x[2], x[3], x[4], x[5], x[6], x[0]])
		
			if a[i+7:i+49] == b:
				node = diagram.nodeByPerm[x]
				print(f'[ex:{len(ex)}] found extension {node} @ {i}')
				ex.append(node)
				a = a[:i+7]+a[i+48:]
				found = True
				break
				
		if not found:
			break
	
	# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- #
		
	currNode = diagram.nodeByPerm[a[0:7]]
	linkType = 1
	for i in range(1, len(a)-6):
		nextPerm = a[i:i+7]
		if len(set(nextPerm)) == 7:
			nextNode = diagram.nodeByPerm[nextPerm]
			assert nextNode.nextLink == None
			assert currNode.links[linkType].next == nextNode
			if linkType == 3:
				diagram.pointers += [currNode]
			currNode.nextLink = nextNode.prevLink = currNode.links[linkType]
			currNode = nextNode
			linkType = 1
		else:
			linkType += 1
	
	diagram.pointers = ex						
	show(diagram)
